
Resources:
  WPProdVPC:
     Type: AWS::EC2::VPC
     Properties:
       CidrBlock: 10.1.0.0/20
       Tags:
       - Key: Name
         Value: WPProdVPC
         
  IntRouteTable:
     Type: "AWS::EC2::RouteTable"
     Properties: 
       VpcId: {Ref: WPProdVPC}
       Tags:
       - Key: Name
         Value: IntRouteTable
  ExtRouteTable:
     Type: "AWS::EC2::RouteTable"
     Properties: 
       VpcId: {Ref: WPProdVPC}
       Tags:
       - Key: Name
         Value: ExtRouteTable
           
  IntSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1a
      VpcId: {Ref: WPProdVPC}
      CidrBlock: 10.1.0.0/23
      MapPublicIpOnLaunch: False
      Tags:
       - Key: Name
         Value: IntSubnet1
  IntSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1b
      VpcId: {Ref: WPProdVPC}
      CidrBlock: 10.1.2.0/23
      MapPublicIpOnLaunch: False
      Tags:
       - Key: Name
         Value: IntSubnet2  
  ExtSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1a
      VpcId: {Ref: WPProdVPC}
      CidrBlock: 10.1.8.0/23
      MapPublicIpOnLaunch: True
      Tags:
       - Key: Name
         Value: ExtSubnet1
  ExtSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1b
      VpcId: {Ref: WPProdVPC}
      CidrBlock: 10.1.10.0/23
      MapPublicIpOnLaunch: True
      Tags:
       - Key: Name
         Value: ExtSubnet2
         
  RouteTableAssociate1:       
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      RouteTableId: {Ref: IntRouteTable}
      SubnetId: {Ref: IntSubnet1} 
  RouteTableAssociate2:       
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      RouteTableId: {Ref: IntRouteTable}
      SubnetId: {Ref: IntSubnet2}

 
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
  
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: {Ref: WPProdVPC}
      InternetGatewayId: {Ref: InternetGateway} 

#   Nat gateway is commented out to create zero cost VPC
#   NATGateway:
#     Type: AWS::EC2::NatGateway
#     Properties:
#       AllocationId:
#         Fn::GetAtt:
#         - NatEIP
#         - AllocationId
#       SubnetId: {Ref: ExtSubnet1}
#   NatEIP:
#     Type: AWS::EC2::EIP
#     Properties:
#       Domain: WPProdvpc      
# 
#   PrimaryCG: 
#     Type: "AWS::EC2::CustomerGateway"
#     Properties: 
#       Type: ipsec.1
#       BgpAsn: 65000
#       IpAddress: 1.2.3.4
#       
#   AttachCustGateway:
#     Type: AWS::EC2::VPCGatewayAttachment
#     Properties:
#       VpcId: {Ref: WPProdVPC}
#       InternetGatewayId: {Ref: PrimaryCG} 


# Security Group Creation

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http, https and ssh to client host
      VpcId: {Ref: WPProdVPC}
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0

# deploy 1st server

  ServerInstance1:
    Type : AWS::EC2::Instance
    Properties:
      InstanceType: t4g.micro
      AvailabilityZone: eu-west-1a
      SubnetId: {Ref: IntSubnet1}
      ImageId: ami-08eae9b2b97caf274
      SecurityGroupIds: [ {Ref: WebSecurityGroup} ]
